USE gAMSCloud_DEMO_04
GO

IF DB_NAME() <> N'gAMSCloud_DEMO_04' SET NOEXEC ON
GO

SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO

--
-- Create or alter procedure [dbo].[ASSIGNMENT_Upd]
--
GO
PRINT (N'Create or alter procedure [dbo].[ASSIGNMENT_Upd]')
GO
CREATE OR ALTER PROCEDURE dbo.ASSIGNMENT_Upd @p_DISPLAYEDID VARCHAR(9) = NULL,
@p_LOCATION NVARCHAR(200) = NULL,
@p_POSITION_ID NVARCHAR(15) = NULL,
@p_BROWSING_UNIT NVARCHAR(1) = NULL,
@p_CREATE_DATE VARCHAR(20) = NULL,
@p_FROM_DATE VARCHAR(20) = NULL,
@p_TO_DATE VARCHAR(20) = NULL,
@p_MISSION NVARCHAR(200) = NULL,
@p_MISSION_DETAIL NVARCHAR(200) = NULL,
@p_CAR_ID VARCHAR(15) = NULL,
@p_DRIVER_ID VARCHAR(15) = NULL,
@p_TIME_ARRIVE VARCHAR(20) = NULL,
@p_LOCATION_ARRIVE VARCHAR(15) = NULL,
@p_EMPLOYEE_ID VARCHAR(20) = NULL,
@p_RECORD_STATUS VARCHAR(1) = NULL,
@p_AUTH_STATUS VARCHAR(1) = NULL,
@p_MAKER_ID VARCHAR(15) = NULL,
@p_CREATE_DT VARCHAR(20) = NULL,
@p_CHECKER_ID VARCHAR(15) = NULL,
@p_APPROVE_DT VARCHAR(20) = NULL,
@p_APPROVER_ID VARCHAR(15) = NULL,
@p_BRANCH_ID VARCHAR(15) = NULL,
@p_MO_ID VARCHAR(15) = NULL,
@p_DEP_ID VARCHAR(15) = NULL

AS 
DECLARE @ERRORSYS NVARCHAR(15) = ''
IF (NOT EXISTS (SELECT * FROM ASSIGNMENT a WHERE a.DisplayedID = @p_DISPLAYEDID))
  SET @ERRORSYS = 'NOT FOUND'

IF @ERRORSYS <> ''
BEGIN
	SELECT ErrorCode Result, ErrorDesc ErrorDesc FROM SYS_ERROR WHERE ErrorCode = @ERRORSYS
  RETURN '0'
END

  DECLARE  @p_INYEAR_ID INT = -1;
  IF (SELECT MAX(INYEAR_ID) FROM ASSIGNMENT WHERE YEAR(CREATE_DATE) = YEAR(CONVERT(DATETIME, @p_CREATE_DATE,103))) IS NOT NULL
  SET @p_INYEAR_ID =  (SELECT MAX(INYEAR_ID) FROM ASSIGNMENT WHERE YEAR(CREATE_DATE) = YEAR(CONVERT(DATETIME, @p_CREATE_DATE,103))) + 1;
  ELSE SET @p_INYEAR_ID = 0;

BEGIN TRANSACTION
BEGIN
  UPDATE ASSIGNMENT
  SET LOCATION = @p_LOCATION, POSITION_ID = @p_POSITION_ID, BROWSING_UNIT = @p_BROWSING_UNIT, CREATE_DATE = CONVERT(DATETIME, @p_CREATE_DATE,103), FROM_DATE = CONVERT(DATETIME, @p_FROM_DATE,103), TO_DATE = CONVERT(DATETIME, @p_TO_DATE,103), MISSION = @p_MISSION,
  MISSION_DETAIL = @p_MISSION_DETAIL, CAR_ID = @p_CAR_ID, DRIVER_ID = @p_DRIVER_ID, TIME_ARRIVE = CONVERT(DATETIME, @p_TIME_ARRIVE,103), LOCATION_ARRIVE = @p_LOCATION_ARRIVE, EMPLOYEE_ID = @p_EMPLOYEE_ID,
  RECORD_STATUS = @p_RECORD_STATUS, AUTH_STATUS = @p_AUTH_STATUS, MAKER_ID = @p_MAKER_ID, CREATE_DT = CONVERT(DATETIME, @p_CREATE_DT,103), APPROVE_DT = CONVERT(DATETIME, @p_APPROVE_DT,103),
  APPROVER_ID = @p_APPROVER_ID, BRANCH_ID = @p_BRANCH_ID, MO_ID = @p_MO_ID, DEP_ID = @p_DEP_ID, INYEAR_ID = @p_INYEAR_ID
  WHERE DisplayedID = @p_DISPLAYEDID
END
IF @@Error <> 0 GOTO ABORT
COMMIT TRANSACTION


SELECT '0' AS Result, '' ErrorDesc
RETURN '0'

ABORT:
  BEGIN
    ROLLBACK TRANSACTION
    SELECT '-1' AS Result, '' ErrorDesc
    RETURN '-1'
  END

GO

--
-- Create or alter procedure [dbo].[ASSIGNMENT_Search]
--
GO
PRINT (N'Create or alter procedure [dbo].[ASSIGNMENT_Search]')
GO
CREATE OR ALTER PROCEDURE dbo.ASSIGNMENT_Search @p_TOP INT = 500,
@p_BROWSING_UNIT NVARCHAR(10) = NULL,
@p_MISSION NVARCHAR(200) = NULL,
@p_CAR_ID VARCHAR(15) = NULL,
@p_CAR_NAME NVARCHAR(60) = NULL,
@p_DRIVER_ID VARCHAR(15) = NULL,
@p_TIME_ARRIVE VARCHAR(20) = NULL,
@p_LOCATION_ARRIVE VARCHAR(15) = NULL,
@p_EMPLOYEE_ID VARCHAR(20) = NULL,
@p_AUTH_STATUS VARCHAR(1) = NULL,
@p_DISPLAYEDID VARCHAR(9) = NULL,
@p_CREATE_FROM VARCHAR(20) = NULL,
@p_CREATE_TO VARCHAR(20) = NULL,
@p_SEARCH_TYPE VARCHAR(1) = 'A',
@p_DEP_ID VARCHAR(15) = NULL


AS
  BEGIN -- PAGING
    IF (@p_TOP IS NULL OR @p_TOP = '' OR @p_TOP = 0) -- PAGING BEGIN
      SELECT 
      a.*,
      v.NAME AS 'CAR_NAME',
      v.FUEL,
      cd.DEP_NAME,
      cd.DEP_CODE,
      T.GO_FROM,
      T.GO_TO,
      T.GO_TIME,
      T.BACK_TIME,
      e.NAME AS 'DRIVER_NAME',
      e1.NAME AS 'CONTACT_NAME'
      --IIF(a.AUTH_STATUS = '1',N'ау duy?t',IIF(a.AUTH_STATUS = '0',N'Ch? duy?t',NULL)) AS AUTH_STATUS
      -- SELECT END
      FROM ASSIGNMENT a
      LEFT JOIN VEHICLE v ON a.CAR_ID = v.CAR_ID
      LEFT JOIN CM_DEPARTMENT cd ON a.DEP_ID = cd.DEP_ID
      LEFT JOIN (SELECT T1.GO_TIME, T2.BACK_TIME, T1.GO_FROM, T1.GO_TO, T1.AS_ID
                FROM (SELECT TIME AS 'GO_TIME', AS_ID, GO_FROM, GO_TO FROM TRIP WHERE TYPE = '0') T1
                LEFT JOIN (SELECT TIME AS 'BACK_TIME', AS_ID FROM TRIP WHERE TYPE = '1') T2 ON T1.AS_ID = T2.AS_ID) T ON a.DisplayedID = T.AS_ID
      LEFT JOIN EMPLOYEEE e ON a.DRIVER_ID = e.DisplayedID
      LEFT JOIN EMPLOYEEE e1 ON a.EMPLOYEE_ID = e1.DisplayedID
      WHERE 1 = 1
      AND (a.BROWSING_UNIT LIKE N'%' + @p_BROWSING_UNIT + N'%' OR @p_BROWSING_UNIT IS NULL OR @p_BROWSING_UNIT = '')
      AND (DATEDIFF(DAY,a.CREATE_DATE, CONVERT(DATETIME,@p_CREATE_FROM,103)) <= 0 OR @p_CREATE_FROM IS NULL OR @p_CREATE_FROM = '')
      AND (DATEDIFF(DAY,a.CREATE_DATE, CONVERT(DATETIME,@p_CREATE_TO,103)) >= 0 OR @p_CREATE_TO IS NULL OR @p_CREATE_TO = '')
      AND (a.MISSION LIKE N'%' + @p_MISSION + N'%' OR @p_MISSION IS NULL OR @p_MISSION = '')
      AND (a.CAR_ID LIKE N'%' + @p_CAR_ID + N'%' OR @p_CAR_ID IS NULL OR @p_CAR_ID = '')
      AND (a.DRIVER_ID LIKE N'%' + @p_DRIVER_ID + N'%' OR @p_DRIVER_ID IS NULL OR @p_DRIVER_ID = '')
      AND (a.LOCATION_ARRIVE LIKE N'%' + @p_LOCATION_ARRIVE + N'%' OR @p_LOCATION_ARRIVE IS NULL OR @p_LOCATION_ARRIVE = '')
      AND (a.EMPLOYEE_ID LIKE N'%' + @p_EMPLOYEE_ID + N'%' OR @p_EMPLOYEE_ID IS NULL OR @p_EMPLOYEE_ID = '')
      AND (a.AUTH_STATUS LIKE N'%' + @p_AUTH_STATUS + N'%' OR @p_AUTH_STATUS IS NULL OR @p_AUTH_STATUS = '')
      AND (a.DISPLAYEDID LIKE N'%' + @p_DISPLAYEDID + N'%' OR @p_DISPLAYEDID IS NULL OR @p_DISPLAYEDID = '')
      -- PAGING END
    ELSE
      -- PAGING BEGIN 
      SELECT TOP (@p_TOP)
      a.*,
      v.NAME AS 'CAR_NAME',
      v.FUEL,
      cd.DEP_NAME,
      cd.DEP_CODE,
      T.GO_FROM,
      T.GO_TO,
      T.GO_TIME,
      T.BACK_TIME,
      e.NAME AS 'DRIVER_NAME',
      e1.NAME AS 'CONTACT_NAME'
      --IIF(a.AUTH_STATUS = '1',N'ау duy?t',IIF(a.AUTH_STATUS = '0',N'Ch? duy?t',NULL)) AS AUTH_STATUS
      -- SELECT END
      FROM ASSIGNMENT a
      LEFT JOIN VEHICLE v ON a.CAR_ID = v.CAR_ID
      LEFT JOIN CM_DEPARTMENT cd ON a.DEP_ID = cd.DEP_ID
      LEFT JOIN (SELECT T1.GO_TIME, T2.BACK_TIME, T1.GO_FROM, T1.GO_TO, T1.AS_ID
                FROM (SELECT TIME AS 'GO_TIME', AS_ID, GO_FROM, GO_TO FROM TRIP WHERE TYPE = '0') T1
                LEFT JOIN (SELECT TIME AS 'BACK_TIME', AS_ID FROM TRIP WHERE TYPE = '1') T2 ON T1.AS_ID = T2.AS_ID) T ON a.DisplayedID = T.AS_ID
      LEFT JOIN EMPLOYEEE e ON a.DRIVER_ID = e.DisplayedID
      LEFT JOIN EMPLOYEEE e1 ON a.EMPLOYEE_ID = e1.DisplayedID
      WHERE 1 = 1
      AND (a.BROWSING_UNIT LIKE N'%' + @p_BROWSING_UNIT + N'%' OR @p_BROWSING_UNIT IS NULL OR @p_BROWSING_UNIT = '')
      AND (DATEDIFF(DAY,a.CREATE_DATE, CONVERT(DATETIME,@p_CREATE_FROM,103)) <= 0 OR @p_CREATE_FROM IS NULL OR @p_CREATE_FROM = '')
      AND (DATEDIFF(DAY,a.CREATE_DATE, CONVERT(DATETIME,@p_CREATE_TO,103)) >= 0 OR @p_CREATE_TO IS NULL OR @p_CREATE_TO = '')
      AND (a.MISSION LIKE N'%' + @p_MISSION + N'%' OR @p_MISSION IS NULL OR @p_MISSION = '')
      AND (a.CAR_ID LIKE N'%' + @p_CAR_ID + N'%' OR @p_CAR_ID IS NULL OR @p_CAR_ID = '')
      AND (a.DRIVER_ID LIKE N'%' + @p_DRIVER_ID + N'%' OR @p_DRIVER_ID IS NULL OR @p_DRIVER_ID = '')
      AND (a.LOCATION_ARRIVE LIKE N'%' + @p_LOCATION_ARRIVE + N'%' OR @p_LOCATION_ARRIVE IS NULL OR @p_LOCATION_ARRIVE = '')
      AND (a.EMPLOYEE_ID LIKE N'%' + @p_EMPLOYEE_ID + N'%' OR @p_EMPLOYEE_ID IS NULL OR @p_EMPLOYEE_ID = '')
      AND (a.AUTH_STATUS LIKE N'%' + @p_AUTH_STATUS + N'%' OR @p_AUTH_STATUS IS NULL OR @p_AUTH_STATUS = '')
      AND (a.DISPLAYEDID LIKE N'%' + @p_DISPLAYEDID + N'%' OR @p_DISPLAYEDID IS NULL OR @p_DISPLAYEDID = '')
      -- PAGING END
  END -- PAGING
  --endregion
GO

--
-- Create or alter procedure [dbo].[ASSIGNMENT_INS]
--
GO
PRINT (N'Create or alter procedure [dbo].[ASSIGNMENT_INS]')
GO
CREATE OR ALTER PROCEDURE dbo.ASSIGNMENT_INS
@p_AS_ID NVARCHAR(20) = NULL,
@p_LOCATION NVARCHAR(200) = NULL,
@p_POSITION_ID NVARCHAR(15) = NULL,
@p_BROWSING_UNIT NVARCHAR(1) = NULL,
@p_CREATE_DATE VARCHAR(20) = NULL,
@p_FROM_DATE VARCHAR(20) = NULL,
@p_TO_DATE VARCHAR(20) = NULL,
@p_MISSION NVARCHAR(200) = NULL,
@p_MISSION_DETAIL NVARCHAR(200) = NULL,
@p_CAR_ID VARCHAR(15) = NULL,
@p_DRIVER_ID VARCHAR(15) = NULL,
@p_TIME_ARRIVE VARCHAR(20) = NULL,
@p_LOCATION_ARRIVE VARCHAR(15) = NULL,
@p_EMPLOYEE_ID VARCHAR(20) = NULL,
@p_RECORD_STATUS VARCHAR(1) = NULL,
@p_AUTH_STATUS VARCHAR(1) = NULL,
@p_MAKER_ID VARCHAR(15) = NULL,
@p_CREATE_DT VARCHAR(20) = NULL,
@p_CHECKER_ID VARCHAR(15) = NULL,
@p_APPROVE_DT VARCHAR(20) = NULL,
@p_APPROVER_ID VARCHAR(15) = NULL,
@p_BRANCH_ID VARCHAR(15) = NULL,
@p_MO_ID VARCHAR(15) = NULL,
@p_DEP_ID VARCHAR(15) = NULL


AS

  IF @p_CREATE_DATE IS NULL OR @p_CREATE_DATE = '' SET @p_CREATE_DATE = GETDATE()
  ELSE SET @p_CREATE_DATE = CONVERT(DATETIME, @p_CREATE_DATE, 103);
  SET @p_FROM_DATE = CONVERT(DATETIME, @p_FROM_DATE, 103)
  SET @p_TO_DATE = CONVERT(DATETIME, @p_TO_DATE, 103)
  SET @p_TIME_ARRIVE = CONVERT(DATETIME, @p_TIME_ARRIVE, 103)
  SET @p_CREATE_DT = CONVERT(DATETIME, @p_CREATE_DT, 103)
  SET @p_APPROVE_DT = CONVERT(DATETIME, @p_APPROVE_DT, 103)

  DECLARE  @p_INYEAR_ID INT = -1;
  IF (SELECT MAX(INYEAR_ID) FROM ASSIGNMENT WHERE YEAR(CREATE_DATE) = YEAR(@p_CREATE_DATE)) IS NOT NULL
  SET @p_INYEAR_ID =  (SELECT MAX(INYEAR_ID) FROM ASSIGNMENT WHERE YEAR(CREATE_DATE) = YEAR(@p_CREATE_DATE)) + 1;
  ELSE SET @p_INYEAR_ID = 0;


  BEGIN TRANSACTION
  INSERT INTO [ASSIGNMENT]([LOCATION],[POSITION_ID],[BROWSING_UNIT],[CREATE_DATE],[FROM_DATE],[TO_DATE],[MISSION],[MISSION_DETAIL],[CAR_ID],[DRIVER_ID],[TIME_ARRIVE],[LOCATION_ARRIVE],[EMPLOYEE_ID],[RECORD_STATUS],[AUTH_STATUS],[MAKER_ID],[CREATE_DT],[CHECKER_ID],[APPROVE_DT],[APPROVER_ID],[BRANCH_ID],[MO_ID],[DEP_ID],[INYEAR_ID]) 
  VALUES (@p_LOCATION,@p_POSITION_ID,@p_BROWSING_UNIT,@p_CREATE_DATE,@p_FROM_DATE,@p_TO_DATE,@p_MISSION,@p_MISSION_DETAIL,@p_CAR_ID,@p_DRIVER_ID,@p_TIME_ARRIVE,@p_LOCATION_ARRIVE,@p_EMPLOYEE_ID,@p_RECORD_STATUS,@p_AUTH_STATUS,@p_MAKER_ID,@p_CREATE_DT,@p_CHECKER_ID,@p_APPROVE_DT,@p_APPROVER_ID,@p_BRANCH_ID,@p_MO_ID,@p_DEP_ID,@p_INYEAR_ID)
  IF @@Error <> 0 GOTO ABORT
  COMMIT TRANSACTION

  SELECT
  '0' AS RESULT, IDENT_CURRENT('ASSIGNMENT') AS_ID
  RETURN '0'

ABORT:
  BEGIN
    ROLLBACK TRANSACTION
    SELECT
      '-1' AS Result
     ,'' ID
    RETURN '-1'
  END
GO

--
-- Create or alter procedure [dbo].[ASSIGNMENT_DEL]
--
GO
PRINT (N'Create or alter procedure [dbo].[ASSIGNMENT_DEL]')
GO
CREATE OR ALTER PROCEDURE dbo.ASSIGNMENT_DEL @p_DISPLAYEDID VARCHAR(9) = NULL
AS 
DECLARE @ERRORSYS NVARCHAR(15) = ''
IF (NOT EXISTS (SELECT * FROM ASSIGNMENT a WHERE a.DisplayedID = @p_DISPLAYEDID))
  SET @ERRORSYS = 'NOT FOUND'

IF @ERRORSYS <> ''
BEGIN
	SELECT ErrorCode Result, ErrorDesc ErrorDesc FROM SYS_ERROR WHERE ErrorCode = @ERRORSYS
  RETURN '0'
END

BEGIN TRANSACTION
BEGIN
  DELETE FROM ASSIGNMENT WHERE DisplayedID = @p_DISPLAYEDID
  IF @@error <> 0
  GOTO ABORT
END
COMMIT TRANSACTION

SELECT '0' AS Result, '' ErrorDesc
RETURN '0'

ABORT:
  BEGIN
    ROLLBACK TRANSACTION
    SELECT '-1' AS Result, '' ErrorDesc
    RETURN '-1'
  END

GO